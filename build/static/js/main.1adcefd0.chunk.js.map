{"version":3,"sources":["Part.js","phone.js","App.js","reportWebVitals.js","index.js"],"names":["Part","_ref","person","React","createElement","name","number","baseUrl","App","persons","setPersons","useState","newName","setNewName","newNumber","setNewNumber","search","setSearch","query","setQuery","message","setMessage","useEffect","axios","get","then","res","data","response","Notification","Fragment","style","backgroundColor","color","fontSize","padding","borderRadius","handleDelete","userId","window","confirm","console","log","id","delete","concat","remove","catch","error","alert","filter","x","value","onChange","async","event","target","results","toLowerCase","includes","length","map","item","key","onSubmit","preventDefault","Name","objectExists","property","some","obj","toupdate","find","update","newPhone","put","setTimeout","post","create","type","display","alignItems","marginLeft","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1adcefd0.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Part=({person})=>{\r\nreturn(\r\n    <div>\r\n        <li>{person.name} {person.number}</li>\r\n    </div>\r\n)\r\n}\r\nexport {Part};","import axios from 'axios';\r\nconst baseUrl= 'http://localhost:3001/api/persons';\r\nconst getAll=()=>{\r\n    const req=axios.get(baseUrl);\r\n    return req.then(res=>res.data);\r\n}\r\nconst create  = (newPhone) => {\r\n    const req=axios.post(baseUrl, newPhone);\r\n    return req.then(res=>res.data);\r\n}\r\nconst update =(id,newPhone)=>{\r\n    const req=axios.put(`${baseUrl}/${id}`,newPhone);\r\n    return req.then(res=>res.data);\r\n}\r\nconst  remove = (id)=> {\r\n    const req= axios.delete(`${baseUrl}/${id}`);\r\n    return req.then(res=>res.data);\r\n}\r\nexport {getAll,create,update,remove};","// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Part } from './Part';\nimport { getAll, create, remove,update} from './phone';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState([]);\n  const [message,setMessage]=useState(null);\n  useEffect(() => {\n    getAll()\n      .then(response => {\n        setPersons(response);\n      })\n  }, []);\n  const Notification=({message})=>{\n    const notStyle={\n      backgroundColor: \"grey\",\n      color:\"green\",\n      fontSize:\"large\",\n      padding:10,\n      borderRadius: 5\n    }\n    if(message===null) return;\n    return <>\n    <h5 style={notStyle}>{message}</h5>\n    </>\n    }\n  const objectExists = (property, value) => {\n    return persons.some(obj => obj[property] === value);\n  }\n  const addName = (event) => {\n    event.preventDefault();\n    const Name = {\n      name: newName,\n      number: newNumber\n    };\n    if (!objectExists('name', Name.name)) {\n      create(Name)\n        .then(response => {\n          console.log(response);\n          setPersons(persons.concat(response));\n          setMessage( `Added ${Name.name}`);\n          setTimeout(() => {\n            setMessage(null);\n          },5000);\n        })\n        .catch((error) => alert(`${error}`));\n    } else {\n      let toupdate=window.confirm(`${Name.name} is already in the phonebook, want to update the number`);\n      let userId=persons.find(person=> person.name===Name.name).id;\n      if(toupdate){\n        update(userId,{...Name,number:newNumber})\n        .then(response=>{\n           setPersons(persons.map(person=>person.id!==userId?person:response));\n           setMessage( `updated ${Name.name}`);\n            setTimeout(() => {\n            setMessage(null);\n          },2000); \n        })\n        .catch(error=>{\n          setMessage(`${Name.name} has been deleted`)\n          setPersons(persons.filter(person=>person.id!==userId))\n           setTimeout(() => {\n            setMessage(null);\n          },2000); \n        })\n      }\n    };\n    setNewName('');\n    setNewNumber('');\n  }\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  }\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value);\n  }\n  const handleSearch = async(event) => {\n    await setSearch(event.target.value);\n    const results = await persons.filter((person) =>\n      person.name.toLowerCase().includes(search.toLowerCase()));\n    (event.target.value.length === 0) ? setQuery([]) : setQuery(results);\n  }\n\n  const handleDelete = (userId) => {\n    const shouldDelete = window.confirm('Are you sure you want to delete this entry?');\n    if (shouldDelete) {\n      try {\n        console.log('reached ')\n        remove(userId).catch((error) => alert(`${error}`));\n        setPersons(persons.filter(x => x.id !== userId));\n      } catch (error) {\n        console.error('Error deleting entry:', error.message);\n      }\n      console.log('complete');\n    }\n  };\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form>\n        filter shown with <input value={search} onChange={handleSearch} />\n      </form>\n      {query.map((item) => <Part key={item.number} person={item} />)}\n      <Notification message={message}/>\n      <h2>Add a New Number</h2>\n      <form onSubmit={addName}>\n        <div>\n          Name: <input value={newName} onChange={handleName} />\n          <br />\n          Number: <input value={newNumber} onChange={handleNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {persons.map((person) => (\n        <div key={person.number} style={{ display: 'flex', alignItems: 'center' }}>\n          <Part person={person} />\n          <button style={{ marginLeft: '10px' }} onClick={() => handleDelete(person.id)}> delete</button>\n        </div>\n      ))}\n    </div>\n  )\n}\nexport { App };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}